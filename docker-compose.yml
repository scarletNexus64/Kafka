version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - cdc_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - cdc_network

  postgres-source:
    image: postgres:15
    hostname: postgres-source
    container_name: postgres-source
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: source_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command:
      - postgres
      - -c
      - wal_level=logical
    volumes:
      - postgres_source_data:/var/lib/postgresql/data
    networks:
      - cdc_network

  postgres-target:
    image: postgres:15
    hostname: postgres-target
    container_name: postgres-target
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: target_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_target_data:/var/lib/postgresql/data
    networks:
      - cdc_network

  debezium:
    image: debezium/connect:2.4
    hostname: debezium
    container_name: debezium
    depends_on:
      - kafka
      - postgres-source
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      CONFIG_STORAGE_REPLICATION_FACTOR: 1
      OFFSET_STORAGE_REPLICATION_FACTOR: 1
      STATUS_STORAGE_REPLICATION_FACTOR: 1
    networks:
      - cdc_network

  cdc-sink:
    build: .
    hostname: cdc-sink
    container_name: cdc-sink
    depends_on:
      - kafka
      - postgres-target
    ports:
      - "8080:8080"
    environment:
      CDC_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      CDC_POSTGRES_HOST: postgres-target
      CDC_POSTGRES_PORT: 5432
      CDC_POSTGRES_DATABASE: target_db
      CDC_POSTGRES_USER: postgres
      CDC_POSTGRES_PASSWORD: postgres
      CDC_LOG_LEVEL: INFO
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    networks:
      - cdc_network
    restart: unless-stopped

networks:
  cdc_network:
    driver: bridge

volumes:
  postgres_source_data:
  postgres_target_data: